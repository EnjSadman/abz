{"version":3,"sources":["components/Header/Header.tsx","components/api/api.ts","components/Tooltiper/Tooltiper.tsx","components/Card/Card.tsx","components/GetRequest/GetRequest.tsx","components/WideSection/WideSection.tsx","components/PostRequest/PostRequest.tsx","App.tsx","index.tsx"],"names":["Header","className","to","src","alt","type","onClick","document","getElementById","scrollIntoView","BASE_URL","serverRequest","specify","a","fetch","result","json","postServerRequest","userBody","token","method","headers","Token","body","status","toolTiper","someString","includes","redactedString","slice","length","temp","id","place","arrowColor","backgroundColor","data-tip","data-for","Card","imageUrl","name","position","email","phone","useState","image","setImage","useEffect","catch","_err","imgChecker","GetRequest","serverResponse","usersFromServer","setUsersFromServer","currentFetchLocation","setCurrentFetchLocation","getResult","setGetResult","users","sort","b","registration_timestamp","fetcher","map","singleUser","photo","page","total_pages","undefined","links","next_url","trimmer","indexOf","WideSection","PostRequest","setServerResponse","validEmailRegex","validPhoneRegex","positions","setPositions","setName","nameIsValid","setNameIsValid","setEmail","emailIsValid","setEmailIsValid","setPhone","phoneIsValid","setPhoneIsValid","uploadedPhoto","setUploadedPhoto","uploadedPhotoName","setUploadedPhotoName","uploadError","setUploadError","isUploadValid","setUploadValid","radioChecked","setRadioChecked","responseGetter","someData","onSubmit","event","preventDefault","test","data","FormData","append","htmlFor","classNames","error_input","placeholder","value","onBlur","onChange","target","legend_visible","error_label","onFocus","singlePosition","index","Number","accept","reader","FileReader","correctSize","files","readAsDataURL","onload","img","Image","height","width","size","disabled","App","ReactDOM","render","StrictMode"],"mappings":"gYAIaA,EAAS,WACpB,OACE,iCACE,sBAAKC,UAAU,mBAAf,UACE,cAAC,IAAD,CACEC,GAAG,OACHD,UAAU,oBAFZ,SAIE,qBACEA,UAAU,eACVE,IAAI,oBACJC,IAAI,oBAGR,gCACE,wBACEC,KAAK,SACLJ,UAAU,wBACVK,QAAS,WAAO,IAAD,EACb,UAAAC,SAASC,eAAe,gBAAxB,SAAkCC,kBAJtC,mBASA,wBACEJ,KAAK,SACLJ,UAAU,wBACVK,QAAS,WAAO,IAAD,EACb,UAAAC,SAASC,eAAe,eAAxB,SAAiCC,kBAJrC,8B,8BC5BJC,EAAW,0DAEJC,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACNC,MAAM,GAAD,OAAIJ,GAAJ,OAAeE,IADd,cACrBG,EADqB,yBAGpBA,EAAOC,QAHa,2CAAH,sDAMnB,SAAeC,EAAtB,kC,4CAAO,WAAiCC,GAAjC,iBAAAL,EAAA,sEACeF,EAAc,SAD7B,cACCQ,EADD,gBAGgBL,MAAM,GAAD,OAAIJ,EAAJ,SACxB,CACEU,OAAQ,OACRC,QAAS,CACPC,MAAOH,EAAMA,OAEfI,KAAML,IATL,cAGCH,EAHD,yBAYGA,EAAOS,QAZV,4C,kCCLA,SAASC,EAAUC,EAAqBzB,GAC7C,GAAIA,EAAU0B,SAAS,eAAgB,CACrC,IAAMC,EAAc,UAAMF,EAAWG,MAAM,EAAG,GAA1B,aAAiCH,EAAWG,MAAM,EAAG,GAArD,aAA4DH,EAAWG,MAAM,EAAG,GAAhF,YAAsFH,EAAWG,MAAM,EAAG,IAA1G,YAAiHH,EAAWG,MAAM,GAAI,KAE1J,OACE,mBACE5B,UAAS,UAAKA,GADhB,SAGG2B,IAKP,GAAIF,EAAWI,QAAU,GACvB,OACE,mBACE7B,UAAS,UAAKA,GADhB,SAGGyB,IAKP,IAAMK,EAAI,UAAML,EAAWG,MAAM,EAAG,IAA1B,OAEV,OACE,qCACE,cAAC,IAAD,CACEG,GAAID,EACJE,MAAM,SACNC,WAAW,cACXC,gBAAgB,sBAJlB,SAMGT,IAEH,mBACEU,YAAA,EACAC,WAAUN,EACV9B,UAAS,UAAKA,GAHhB,SAKG8B,O,UC/BIO,EAAyB,SAAC,GAMhC,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,MAEA,EAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAYA,OAVAC,qBAAU,YACQ,uCAAG,sBAAAlC,EAAA,sDACjBC,MAAMyB,GAAUS,OAAM,SAAAC,GACpBH,EAAS,6BAFM,2CAAH,qDAMhBI,KACC,IAGD,sBAAKjD,UAAU,OAAf,UACE,qBACEE,IAAG,UAAK0C,GACRzC,IAAG,UAAKoC,GACRvC,UAAU,gBAEXwB,EAAUe,EAAM,cAChBf,EAAUgB,EAAU,kBACpBhB,EAAUiB,EAAO,eACjBjB,EAAUkB,EAAO,mBC/BXQ,G,MAA+B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC7C,EAA8CR,mBAAiB,IAA/D,mBAAOS,EAAP,KAAwBC,EAAxB,KACA,EAAwDV,mBAAwB,wBAAhF,mBAAOW,EAAP,KAA6BC,EAA7B,KACA,EAAkCZ,qBAAlC,mBAAOa,EAAP,KAAkBC,EAAlB,KA2BA,OAzBAX,qBAAU,WACRO,EAAmB,IACnBE,EAAwB,0BACvB,CAACJ,IAEJL,qBAAU,YACK,uCAAG,4BAAAlC,EAAA,yDACe,OAAzB0C,EADU,gCAES5C,EAAc4C,GAFvB,QAENxC,EAFM,QAIL4C,MAAMC,MACX,SAAC/C,EAAUgD,GAAX,OAAwBA,EAAEC,uBAAyBjD,EAAEiD,0BAGvDJ,EAAa3C,GACbuC,EAAmB,sBAAID,GAAJ,YAAwBtC,EAAO4C,QAAOC,MACvD,SAAC/C,EAAUgD,GAAX,OAAwBA,EAAEC,uBAAyBjD,EAAEiD,2BAEvDN,EAAwB,MAZZ,2CAAH,qDAgBbO,KACC,CAACR,IAGF,sBAAKtD,UAAU,gBAAgB+B,GAAG,QAAlC,UACE,oBAAI/B,UAAU,eAAd,sCACCoD,EAAgBvB,OAAS,GAAKuB,EAAgBW,KAAI,SAAAC,GAAU,OAC3D,cAAC,EAAD,CAEE1B,SAAU0B,EAAWC,MACrB1B,KAAMyB,EAAWzB,KACjBE,MAAOuB,EAAWvB,MAClBC,MAAOsB,EAAWtB,MAClBF,SAAUwB,EAAWxB,UALhBwB,EAAWvB,WAQV,OAATe,QAAS,IAATA,OAAA,EAAAA,EAAWU,SAAX,OAAoBV,QAApB,IAAoBA,OAApB,EAAoBA,EAAWW,cAC9B,wBACE/D,KAAK,SACLJ,UAAU,qBACVK,QAAS,WACP,QAAkB+D,IAAdZ,EACF,GAAiC,OAA7BA,EAAUa,MAAMC,SAClBf,EAAwB,UACnB,CACL,IAAMgB,EAAUf,EAAUa,MAAMC,SAASE,QAAQ,OAEjDjB,EACEC,EAAUa,MAAMC,SAAS1C,MAAM2C,EAAU,EAAGf,EAAUa,MAAMC,SAASzC,WAX/E,4BCnDK4C,G,MAAwB,WACnC,OACE,qBAAKzE,UAAU,+BAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,oBAAIA,UAAU,wBAAd,qDAGA,mBAAGA,UAAU,0BAAb,wTAOA,wBACEI,KAAK,SACLJ,UAAU,SACVK,QAAS,WAAO,IAAD,EACb,UAAAC,SAASC,eAAe,eAAxB,SAAiCC,kBAJrC,4B,gBCNKkE,G,MAAgC,SAAC,GAA2C,IAAzCvB,EAAwC,EAAxCA,eAAgBwB,EAAwB,EAAxBA,kBACxDC,EAAkB,ubAClBC,EAAkB,0BAExB,EAAkClC,mBAAsB,IAAxD,mBAAOmC,EAAP,KAAkBC,EAAlB,KAEA,EAAwBpC,mBAAS,IAAjC,mBAAOJ,EAAP,KAAayC,EAAb,KACA,EAAsCrC,oBAAS,GAA/C,mBAAOsC,EAAP,KAAoBC,EAApB,KAEA,EAA0BvC,mBAAS,IAAnC,mBAAOF,EAAP,KAAc0C,EAAd,KACA,EAAwCxC,oBAAS,GAAjD,mBAAOyC,EAAP,KAAqBC,EAArB,KAEA,EAA0B1C,mBAAS,IAAnC,mBAAOD,EAAP,KAAc4C,EAAd,KACA,EAAwC3C,oBAAS,GAAjD,mBAAO4C,EAAP,KAAqBC,EAArB,KAEA,EAA0C7C,mBAAiB,IAA3D,mBAAO8C,EAAP,KAAsBC,EAAtB,KACA,EAAkD/C,mBAAS,qBAA3D,mBAAOgD,EAAP,KAA0BC,EAA1B,KACA,EAAsCjD,mBAAwB,MAA9D,mBAAOkD,EAAP,KAAoBC,EAApB,KACA,GAAwCnD,oBAAS,GAAjD,qBAAOoD,GAAP,MAAsBC,GAAtB,MAEA,GAAwCrD,mBAAwB,MAAhE,qBAAOsD,GAAP,MAAqBC,GAArB,MAEMC,GAAc,uCAAG,WAAOC,GAAP,eAAAxF,EAAA,sEACAI,EAAkBoF,GADlB,OACftF,EADe,OAGrB6D,EAAkB7D,GAHG,2CAAH,sDAgBpB,OAVAgC,qBAAU,YACK,uCAAG,4BAAAlC,EAAA,sEACOF,EAAc,aADrB,OACRI,EADQ,OAGdiE,EAAajE,EAAOgE,WAHN,2CAAH,qDAMbhB,KACC,IAGD,qBAAK9D,UAAU,iBAAiB+B,GAAG,OAAnC,SACwB,OAAnBoB,GAAgD,MAAnBA,GAA+C,MAAnBA,EAC1D,qCACE,oBAAInD,UAAU,gBAAd,uCAEqB,MAAnBmD,GACI,oBAAInD,UAAU,gBAAd,yDAEN,uBACEA,UAAU,kBACV+B,GAAG,YACHsE,SAAU,SAACC,GAmBT,GAlBAA,EAAMC,iBAEFhE,EAAKV,OAAS,GAChBqD,GAAe,GAGZN,EAAgB4B,KAAK/D,IACxB4C,GAAgB,GAGbR,EAAgB2B,KAAK9D,IACxB8C,GAAgB,GAGdC,EAAc5D,OAAS,GACzBmE,IAAe,GAGbf,GACHG,GACAG,GACAQ,IACiB,OAAjBE,GAAuB,CACtBtB,EAAkB,MAClB,IAAM8B,EAAO,IAAIC,SAEjBD,EAAKE,OAAO,OAAQpE,GACpBkE,EAAKE,OAAO,QAASlE,GACrBgE,EAAKE,OAAO,QAASjE,GACrB+D,EAAKE,OAAO,cAAZ,UAA8BV,KAC9BQ,EAAKE,OAAO,QAASlB,EAAc,IAEnCU,GAAeM,KApCrB,UAwCE,wBAAOG,QAAQ,OAAO5G,UAAU,yBAAhC,UACE,uBACEA,UAAW6G,IACT,oBACA,CAAEC,aAAc7B,IAElB7E,KAAK,OACL2G,YAAY,YACZhF,GAAG,OACHiF,MAAOzE,EACP0E,OAAQ,WACF1E,EAAKV,OAAS,GAChBqD,GAAe,IAGnBgC,SAAU,SAACZ,GACTtB,EAAQsB,EAAMa,OAAOH,OACjBV,EAAMa,OAAOH,MAAMnF,QAAU,GAC/BqD,GAAe,MAIrB,uBACE0B,QAAQ,OACR5G,UAAW6G,IACT,sBACA,CAAEO,eAAgB7E,EAAKV,OAAS,GAChC,CAAEwF,aAAcpC,IALpB,mBAUEA,GACA,uBACEjF,UAAU,iCACV4G,QAAQ,OAFV,6BAQJ,wBAAOA,QAAQ,QAAQ5G,UAAU,yBAAjC,UACE,uBACEA,UAAW6G,IACT,oBACA,CAAEC,aAAc1B,IAElBhF,KAAK,OACL2G,YAAY,QACZhF,GAAG,QACHiF,MAAOvE,EACPyE,SAAU,SAACZ,GACTnB,EAASmB,EAAMa,OAAOH,UAG1B,uBACEJ,QAAQ,QACR5G,UAAW6G,IACT,sBACA,CAAEO,eAAgB3E,EAAMZ,OAAS,GACjC,CAAEwF,aAAcjC,IALpB,oBAUEA,GACA,uBACEpF,UAAU,iCACV4G,QAAQ,QAFV,8BAQJ,wBAAOA,QAAQ,QAAQ5G,UAAU,yBAAyB+B,GAAG,kBAA7D,UACE,uBACEA,GAAG,QACH/B,UAAW6G,IACT,oBACA,CAAEC,aAAcvB,IAElBnF,KAAK,OACL2G,YAAY,QACZC,MAAOtE,EACPwE,SAAU,SAACZ,GACThB,EAASgB,EAAMa,OAAOH,OAClBzB,GAAkC,KAAjB7C,EAAMb,QACzB2D,GAAgB,IAGpB8B,QAAS,SAAChB,GACmB,KAAvBA,EAAMa,OAAOH,OACf1B,EAAS,UAIf,uBACEsB,QAAQ,QACR5G,UAAW6G,IACT,sBACA,CAAEO,eAAgB1E,EAAMb,OAAS,GACjC,CAAEwF,aAAc9B,IALpB,mBAUA,uBACEvF,UAAW6G,IAAW,qBAAsB,CAAEQ,aAAc9B,IAC5DqB,QAAQ,QAFV,SAKKrB,EACI,0BACA,qBAIX,mBAAGvF,UAAU,uBAAb,kCACC8E,EAAUf,KAAI,SAACwD,EAAgBC,GAAjB,OACZA,IAAU1C,EAAUjD,OAAS,EAE1B,wBAA+BE,GAAG,aAAa/B,UAAU,qBAAzD,UACE,uBACEI,KAAK,QACLJ,UAAU,qBACVuC,KAAK,WACLR,GAAIwF,EAAehF,KACnByE,MAAOO,EAAexF,GACtBmF,SAAU,SAACZ,GACTJ,GAAgBuB,OAAOnB,EAAMa,OAAOH,WAGxC,uBAAOJ,QAASW,EAAehF,KAAMvC,UAAU,iBAC/C,mBAAGA,UAAU,oBAAb,SACGuH,EAAehF,SAbRgF,EAAexF,IAkB3B,wBAA+B/B,UAAU,qBAAzC,UACE,uBACEI,KAAK,QACLJ,UAAU,qBACVuC,KAAK,WACLR,GAAIwF,EAAehF,KACnByE,MAAOO,EAAexF,GACtBmF,SAAU,SAACZ,GACTJ,GAAgBuB,OAAOnB,EAAMa,OAAOH,WAGxC,uBAAOJ,QAASW,EAAehF,KAAMvC,UAAU,iBAC/C,mBAAGA,UAAU,oBAAb,SACGuH,EAAehF,SAbRgF,EAAexF,OAmBjC,wBACE6E,QAAQ,eACR5G,UAAU,cAFZ,UAIE,uBACE4G,QAAQ,eACR5G,UAAW6G,IAAW,qBAAsB,CAAEC,YAA6B,OAAhBjB,IAF7D,oBAMA,uBACEe,QAAQ,eACR5G,UAAW6G,IAAW,oBAAqB,CAAEC,YAA6B,OAAhBjB,IAF5D,SAIGF,IAEH,uBACE3F,UAAU,oBACVI,KAAK,OACL2B,GAAG,eACH2F,OAAO,wBACPR,SAAU,SAACZ,GACT,IAAMqB,EAAS,IAAIC,WACfC,GAAc,EAElB/B,EAAe,MAEa,OAAvBQ,EAAMa,OAAOW,OAAoBxB,EAAMa,OAAOW,MAAMjG,OAAS,GAChE8F,EAAOI,cAAczB,EAAMa,OAAOW,MAAM,IAExCH,EAAOK,OAAS,WACd,IAAMC,EAAM,IAAIC,MACVpG,EAAI,UAAM6F,EAAO7G,QAEvBmH,EAAI/H,IAAM4B,EACVmG,EAAID,OAAS,WACX,IAAQG,EAAWF,EAAXE,OACAC,EAAUH,EAAVG,MAEHD,GAAU,IAAQC,GAAS,KAC9BP,GAAc,GAGW,OAAvBvB,EAAMa,OAAOW,OAChBxB,EAAMa,OAAOW,MAAMjG,OAAS,GAC5ByE,EAAMa,OAAOW,MAAM,GAAGO,MAAQ,SAC9BR,GACCjC,EAAqBU,EAAMa,OAAOW,MAAM,GAAGvF,MAC3CmD,EAAiB,YAAIY,EAAMa,OAAOW,QAClC9B,IAAe,IACiB,OAAvBM,EAAMa,OAAOW,OACnBxB,EAAMa,OAAOW,MAAM,GAAGO,KAAO,SAChCzC,EAAqB,qBACrBE,EAAe,+BACL+B,IACVjC,EAAqB,qBACrBE,EAAe,2CAKrBF,EAAqB,qBACrBI,IAAe,OAIJ,OAAhBH,GACC,uBACE7F,UAAU,iCADZ,SAGG6F,OAIP,wBACEzF,KAAK,SACLJ,UAAU,sBACVsI,SACE/F,EAAKV,OAAS,GACfY,EAAMZ,OAAS,GACfa,EAAMb,OAAS,GACG,OAAjBoE,KACCF,GARL,2BAgBF,qBACE7F,IAAI,yBACJC,IAAI,yBACJH,UAAU,mBCtVTuI,EAAgB,WAC3B,MAA4C5F,mBAAwB,MAApE,mBAAOQ,EAAP,KAAuBwB,EAAvB,KAEA,OACE,qCACE,cAAC,EAAD,IACA,uBAAM3E,UAAU,eAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYmD,eAAgBA,IAC5B,cAAC,EAAD,CAAaA,eAAgBA,EAAgBwB,kBAAmBA,WCVxE6D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJpI,SAASC,eAAe,W","file":"static/js/main.f49b53d6.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header = () => {\n  return (\n    <header>\n      <div className=\"header container\">\n        <Link\n          to=\"abz/\"\n          className=\"header__logo-link\"\n        >\n          <img\n            className=\"header__logo\"\n            src=\"./images/logo.svg\"\n            alt=\"testtask logo\"\n          />\n        </Link>\n        <div>\n          <button\n            type=\"button\"\n            className=\"button header__button\"\n            onClick={() => {\n              document.getElementById('users')?.scrollIntoView();\n            }}\n          >\n            Users\n          </button>\n          <button\n            type=\"button\"\n            className=\"button header__button\"\n            onClick={() => {\n              document.getElementById('post')?.scrollIntoView();\n            }}\n          >\n            Sign up\n          </button>\n        </div>\n      </div>\n    </header>\n  );\n};\n","const BASE_URL = 'https://frontend-test-assignment-api.abz.agency/api/v1/';\n\nexport const serverRequest = async (specify : string) => {\n  const result = await fetch(`${BASE_URL}${specify}`);\n\n  return result.json();\n};\n\nexport async function postServerRequest(userBody: FormData) {\n  const token = await serverRequest('token');\n\n  const result = await fetch(`${BASE_URL}users`,\n    {\n      method: 'POST',\n      headers: {\n        Token: token.token,\n      },\n      body: userBody,\n    });\n\n  return (result.status);\n}\n","import React from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nexport function toolTiper(someString : string, className : string) {\n  if (className.includes('card__phone')) {\n    const redactedString = `${someString.slice(0, 3)} (${someString.slice(3, 6)}) ${someString.slice(6, 9)} ${someString.slice(9, 11)} ${someString.slice(11, 13)}`;\n\n    return (\n      <p\n        className={`${className}`}\n      >\n        {redactedString}\n      </p>\n    );\n  }\n\n  if (someString.length <= 34) {\n    return (\n      <p\n        className={`${className}`}\n      >\n        {someString}\n      </p>\n    );\n  }\n\n  const temp = `${someString.slice(0, 34)}...`;\n\n  return (\n    <>\n      <ReactTooltip\n        id={temp}\n        place=\"bottom\"\n        arrowColor=\"transparent\"\n        backgroundColor=\"rgba(0, 0, 0, 0.87)\"\n      >\n        {someString}\n      </ReactTooltip>\n      <p\n        data-tip\n        data-for={temp}\n        className={`${className}`}\n      >\n        {temp}\n      </p>\n\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { toolTiper } from '../Tooltiper/Tooltiper';\nimport './Card.scss';\n\ninterface Props {\n  imageUrl: string;\n  name: string;\n  position: string,\n  email: string,\n  phone: string,\n}\n\nexport const Card : React.FC<Props> = ({\n  imageUrl,\n  name,\n  position,\n  email,\n  phone,\n}) => {\n  const [image, setImage] = useState(imageUrl);\n\n  useEffect(() => {\n    const imgChecker = async () => {\n      fetch(imageUrl).catch(_err => {\n        setImage('images/photo-cover.png');\n      });\n    };\n\n    imgChecker();\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <img\n        src={`${image}`}\n        alt={`${name}`}\n        className=\"card__photo\"\n      />\n      {toolTiper(name, 'card__name')}\n      {toolTiper(position, 'card__position')}\n      {toolTiper(email, 'card__email')}\n      {toolTiper(phone, 'card__phone')}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { ServerResponse, User } from '../../react-app-env';\nimport { serverRequest } from '../api/api';\nimport { Card } from '../Card/Card';\nimport './GetRequest.scss';\n\ninterface Props {\n  serverResponse : number | null,\n}\n\nexport const GetRequest : React.FC<Props> = ({ serverResponse }) => {\n  const [usersFromServer, setUsersFromServer] = useState<User[]>([]);\n  const [currentFetchLocation, setCurrentFetchLocation] = useState<string | null>('users?page=1&count=6');\n  const [getResult, setGetResult] = useState<ServerResponse>();\n\n  useEffect(() => {\n    setUsersFromServer([]);\n    setCurrentFetchLocation('users?page=1&count=6');\n  }, [serverResponse]);\n\n  useEffect(() => {\n    const fetcher = async () => {\n      if (currentFetchLocation !== null) {\n        const result = await serverRequest(currentFetchLocation);\n\n        result.users.sort(\n          (a : User, b : User) => b.registration_timestamp - a.registration_timestamp,\n        );\n\n        setGetResult(result);\n        setUsersFromServer([...usersFromServer, ...result.users].sort(\n          (a : User, b : User) => b.registration_timestamp - a.registration_timestamp,\n        ));\n        setCurrentFetchLocation(null);\n      }\n    };\n\n    fetcher();\n  }, [currentFetchLocation]);\n\n  return (\n    <div className=\"container get\" id=\"users\">\n      <h1 className=\"get__heading\">Working with GET request</h1>\n      {usersFromServer.length > 0 && usersFromServer.map(singleUser => (\n        <Card\n          key={singleUser.email}\n          imageUrl={singleUser.photo}\n          name={singleUser.name}\n          email={singleUser.email}\n          phone={singleUser.phone}\n          position={singleUser.position}\n        />\n      ))}\n      {getResult?.page !== getResult?.total_pages && (\n        <button\n          type=\"button\"\n          className=\"button get__button\"\n          onClick={() => {\n            if (getResult !== undefined) {\n              if (getResult.links.next_url === null) {\n                setCurrentFetchLocation(null);\n              } else {\n                const trimmer = getResult.links.next_url.indexOf('v1/');\n\n                setCurrentFetchLocation(\n                  getResult.links.next_url.slice(trimmer + 3, getResult.links.next_url.length),\n                );\n              }\n            }\n          }}\n        >\n          Show more\n        </button>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './WideSection.scss';\n\nexport const WideSection: React.FC = () => {\n  return (\n    <div className=\"container--full wide_section\">\n      <div className=\"wide_section_container\">\n        <h1 className=\"wide_section__heading\">\n          Test assignment for front-end developer\n        </h1>\n        <p className=\"wide_section__paragraph\">\n          What defines a good front-end developer is one that has skilled knowledge of HTML,\n          CSS, JS with a vast understanding of\n          User design thinking as they&#39;ll be building web interfaces with accessibility in mind.\n          They should also be excited to learn,\n          as the world of Front-End Development keeps evolving.\n        </p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            document.getElementById('post')?.scrollIntoView();\n          }}\n        >\n          Sign up\n        </button>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Positions } from '../../react-app-env';\nimport { serverRequest, postServerRequest } from '../api/api';\nimport './PostRequest.scss';\n\ninterface Props {\n  serverResponse: number | null,\n  setServerResponse: (arg0 : number | null) => void,\n}\n\nexport const PostRequest : React.FC<Props> = ({ serverResponse, setServerResponse }) => {\n  const validEmailRegex = /^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\n  const validPhoneRegex = /^[+]{0,1}380([0-9]{9})$/;\n\n  const [positions, setPositions] = useState<Positions[]>([]);\n\n  const [name, setName] = useState('');\n  const [nameIsValid, setNameIsValid] = useState(true);\n\n  const [email, setEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState(true);\n\n  const [phone, setPhone] = useState('');\n  const [phoneIsValid, setPhoneIsValid] = useState(true);\n\n  const [uploadedPhoto, setUploadedPhoto] = useState<File[]>([]);\n  const [uploadedPhotoName, setUploadedPhotoName] = useState('Upload your photo');\n  const [uploadError, setUploadError] = useState<null | string>(null);\n  const [isUploadValid, setUploadValid] = useState(false);\n\n  const [radioChecked, setRadioChecked] = useState<null | number>(null);\n\n  const responseGetter = async (someData : FormData) => {\n    const result = await postServerRequest(someData);\n\n    setServerResponse(result);\n  };\n\n  useEffect(() => {\n    const fetcher = async () => {\n      const result = await serverRequest('positions');\n\n      setPositions(result.positions);\n    };\n\n    fetcher();\n  }, []);\n\n  return (\n    <div className=\"post container\" id=\"post\">\n      {((serverResponse === null) || (serverResponse === 422) || (serverResponse === 409)) ? (\n        <>\n          <h1 className=\"post__heading\">Working with POST request</h1>\n          {\n            serverResponse === 409\n            && (<h2 className=\"error_heading\">User with this email or phone already exist</h2>)\n          }\n          <form\n            className=\"post__form form\"\n            id=\"post_form\"\n            onSubmit={(event) => {\n              event.preventDefault();\n\n              if (name.length < 2) {\n                setNameIsValid(false);\n              }\n\n              if (!validEmailRegex.test(email)) {\n                setEmailIsValid(false);\n              }\n\n              if (!validPhoneRegex.test(phone)) {\n                setPhoneIsValid(false);\n              }\n\n              if (uploadedPhoto.length > 0) {\n                setUploadValid(true);\n              }\n\n              if (nameIsValid\n            && emailIsValid\n            && phoneIsValid\n            && isUploadValid\n            && radioChecked !== null) {\n                setServerResponse(null);\n                const data = new FormData();\n\n                data.append('name', name);\n                data.append('email', email);\n                data.append('phone', phone);\n                data.append('position_id', `${radioChecked}`);\n                data.append('photo', uploadedPhoto[0]);\n\n                responseGetter(data);\n              }\n            }}\n          >\n            <label htmlFor=\"name\" className=\"form__label--container\">\n              <input\n                className={classNames(\n                  'form__input--text',\n                  { error_input: !nameIsValid },\n                )}\n                type=\"text\"\n                placeholder=\"Your name\"\n                id=\"name\"\n                value={name}\n                onBlur={() => {\n                  if (name.length < 2) {\n                    setNameIsValid(false);\n                  }\n                }}\n                onChange={(event) => {\n                  setName(event.target.value);\n                  if (event.target.value.length >= 2) {\n                    setNameIsValid(true);\n                  }\n                }}\n              />\n              <label\n                htmlFor=\"name\"\n                className={classNames(\n                  'form__label--legend',\n                  { legend_visible: name.length > 0 },\n                  { error_label: !nameIsValid },\n                )}\n              >\n                name\n              </label>\n              {!nameIsValid && (\n                <label\n                  className=\"form__label--under error_label\"\n                  htmlFor=\"name\"\n                >\n                  Invalid name\n                </label>\n              )}\n            </label>\n            <label htmlFor=\"email\" className=\"form__label--container\">\n              <input\n                className={classNames(\n                  'form__input--text',\n                  { error_input: !emailIsValid },\n                )}\n                type=\"text\"\n                placeholder=\"Email\"\n                id=\"email\"\n                value={email}\n                onChange={(event) => {\n                  setEmail(event.target.value);\n                }}\n              />\n              <label\n                htmlFor=\"email\"\n                className={classNames(\n                  'form__label--legend',\n                  { legend_visible: email.length > 0 },\n                  { error_label: !emailIsValid },\n                )}\n              >\n                email\n              </label>\n              {!emailIsValid && (\n                <label\n                  className=\"form__label--under error_label\"\n                  htmlFor=\"email\"\n                >\n                  Invalid email\n                </label>\n              )}\n            </label>\n            <label htmlFor=\"phone\" className=\"form__label--container\" id=\"phone_container\">\n              <input\n                id=\"phone\"\n                className={classNames(\n                  'form__input--text',\n                  { error_input: !phoneIsValid },\n                )}\n                type=\"text\"\n                placeholder=\"Phone\"\n                value={phone}\n                onChange={(event) => {\n                  setPhone(event.target.value);\n                  if (phoneIsValid && (phone.length === 13)) {\n                    setPhoneIsValid(true);\n                  }\n                }}\n                onFocus={(event) => {\n                  if (event.target.value === '') {\n                    setPhone('+38');\n                  }\n                }}\n              />\n              <label\n                htmlFor=\"phone\"\n                className={classNames(\n                  'form__label--legend',\n                  { legend_visible: phone.length > 0 },\n                  { error_label: !phoneIsValid },\n                )}\n              >\n                phone\n              </label>\n              <label\n                className={classNames('form__label--under', { error_label: !phoneIsValid })}\n                htmlFor=\"phone\"\n              >\n                {\n                  (phoneIsValid)\n                    ? ('+38 (XXX) XXX - XX - XX')\n                    : ('Invalid phone')\n                }\n              </label>\n            </label>\n            <p className=\"form__heading--radio\">Select your position</p>\n            {positions.map((singlePosition, index) => (\n              (index === positions.length - 1)\n                ? (\n                  <label key={singlePosition.id} id=\"last_radio\" className=\"form__label--radio\">\n                    <input\n                      type=\"radio\"\n                      className=\"form__input--radio\"\n                      name=\"position\"\n                      id={singlePosition.name}\n                      value={singlePosition.id}\n                      onChange={(event) => {\n                        setRadioChecked(Number(event.target.value));\n                      }}\n                    />\n                    <label htmlFor={singlePosition.name} className=\"custom_radio\" />\n                    <p className=\"form__label--text\">\n                      {singlePosition.name}\n                    </p>\n                  </label>\n                )\n                : (\n                  <label key={singlePosition.id} className=\"form__label--radio\">\n                    <input\n                      type=\"radio\"\n                      className=\"form__input--radio\"\n                      name=\"position\"\n                      id={singlePosition.name}\n                      value={singlePosition.id}\n                      onChange={(event) => {\n                        setRadioChecked(Number(event.target.value));\n                      }}\n                    />\n                    <label htmlFor={singlePosition.name} className=\"custom_radio\" />\n                    <p className=\"form__label--text\">\n                      {singlePosition.name}\n                    </p>\n                  </label>\n                )\n\n            ))}\n            <label\n              htmlFor=\"photo_upload\"\n              className=\"fake_upload\"\n            >\n              <label\n                htmlFor=\"photo_upload\"\n                className={classNames('fake_upload_button', { error_input: uploadError !== null })}\n              >\n                Upload\n              </label>\n              <label\n                htmlFor=\"photo_upload\"\n                className={classNames('fake_upload_field', { error_input: uploadError !== null })}\n              >\n                {uploadedPhotoName}\n              </label>\n              <input\n                className=\"form__input--file\"\n                type=\"file\"\n                id=\"photo_upload\"\n                accept=\"image/jpeg, image/jpg\"\n                onChange={(event) => {\n                  const reader = new FileReader();\n                  let correctSize = false;\n\n                  setUploadError(null);\n\n                  if ((event.target.files !== null) && (event.target.files.length > 0)) {\n                    reader.readAsDataURL(event.target.files[0]);\n\n                    reader.onload = () => {\n                      const img = new Image();\n                      const temp = `${reader.result}`;\n\n                      img.src = temp;\n                      img.onload = () => {\n                        const { height } = img;\n                        const { width } = img;\n\n                        if ((height >= 50) && (width >= 50)) {\n                          correctSize = true;\n                        }\n\n                        if (event.target.files !== null\n                      && event.target.files.length > 0\n                      && event.target.files[0].size <= 5242880\n                      && correctSize) {\n                          setUploadedPhotoName(event.target.files[0].name);\n                          setUploadedPhoto([...event.target.files]);\n                          setUploadValid(true);\n                        } else if (event.target.files !== null\n                          && event.target.files[0].size > 5242880) {\n                          setUploadedPhotoName('Upload your photo');\n                          setUploadError('image size higher than 5MB');\n                        } else if (!correctSize) {\n                          setUploadedPhotoName('Upload your photo');\n                          setUploadError('resolution must be more than 50x50');\n                        }\n                      };\n                    };\n                  } else {\n                    setUploadedPhotoName('Upload your photo');\n                    setUploadValid(false);\n                  }\n                }}\n              />\n              {uploadError !== null && (\n                <label\n                  className=\"form__label--under error_label\"\n                >\n                  {uploadError}\n                </label>\n              )}\n            </label>\n            <button\n              type=\"submit\"\n              className=\"button form__submit\"\n              disabled={(\n                name.length < 2\n            || email.length < 2\n            || phone.length < 2\n            || (radioChecked === null)\n            || !(isUploadValid))}\n            >\n              Sign up\n            </button>\n          </form>\n        </>\n      )\n        : (\n          <img\n            src=\"../../images/sent.webp\"\n            alt=\"registration completed\"\n            className=\"sent_image\"\n          />\n        )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Header } from './components/Header/Header';\nimport { GetRequest } from './components/GetRequest/GetRequest';\nimport { WideSection } from './components/WideSection/WideSection';\nimport { PostRequest } from './components/PostRequest/PostRequest';\n\nexport const App: React.FC = () => {\n  const [serverResponse, setServerResponse] = useState<number | null>(null);\n\n  return (\n    <>\n      <Header />\n      <main className=\"main_content\">\n        <WideSection />\n        <GetRequest serverResponse={serverResponse} />\n        <PostRequest serverResponse={serverResponse} setServerResponse={setServerResponse} />\n      </main>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}